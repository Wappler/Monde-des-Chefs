{"version":3,"sources":["core/f7.js","actions/f7toast.js","actions/f7dialog.js","actions/f7progress.js","actions/f7preloader.js","components/f7App.js","components/f7View.js","components/f7Page.js","components/f7Popup.js","components/f7LoginScreen.js","components/f7ActionsModal.js","components/f7AreaChart.js","components/f7Gauge.js","components/f7Messages.js","components/f7Notification.js","components/f7PhotoBrowser.js","components/f7PieChart.js","components/f7Progressbar.js","components/f7Toggle.js"],"names":["Framework7","alert","dmx","f7","events","init","rootEl","params","Events","f7Params","Object","assign","root","window","routes","length","instance","initialized","emit","once","ready","callback","config","mapping","Actions","f7.toast.show","options","toast","create","destroyOnClose","icon","this","parse","text","position","horizontalPosition","closeButton","closeButtonColor","closeButtonText","closeTimeout","undefined","open","f7.dialog.alert","title","Promise","resolve","dialog","f7.dialog.confirm","self","confirm","then","_exec","else","f7.dialog.prompt","defaultValue","prompt","value","f7.dialog.login","login","username","password","f7.dialog.password","f7.dialog.preloader","color","preloader","f7.dialog.close","close","f7.progressbar.show","progressbar","show","f7.progressbar.set","set","progress","duration","f7.progressbar.hide","hide","f7.preloader.show","f7.preloader.hide","Component","initialData","attributes","name","type","String","default","version","theme","auto-dark-theme","Boolean","methods","msg","showPreloader","hidePreloader","showProgress","setProgress","hideProgress","render","node","props","document","location","search","indexOf","split","id","autoDarkTheme","view","stackPages","$parse","constructor","parent","onPageInit","bind","onPageBeforeRemove","BaseComponent","call","navigate","url","f7View","router","back","refresh","refreshPage","clearHistory","clearPreviousHistory","views","on","onPageReinit","page","child","el","route","children","push","data","dmxComponent","index","findIndex","$node","del","splice","destroy","off","opened","close-on-escape","swipe-to-close","animate","f7Popup","Event","closed","popupParams","dispatchEvent","closeOnEscape","swipeToClose","popup","update","f7LoginScreen","loginScreenParams","loginScreen","close-by-outside-click","component","closeByOutsideClick","actions","datasets","Array","line-chart","axis","axis-labels","tooltip","legend","toggle-datasets","max-axis-labels","Number","areaChart","lineChart","axisLabels","toggleDatasets","maxAxisLabels","equal","size","bg-color","border-bg-color","border-color","border-width","value-text","value-text-color","value-font-size","value-font-weight","label-text","label-text-color","label-font-size","label-font-weight","getProps","entries","reduce","o","entry","replace","m","c","toUpperCase","gauge","new-messages-first","messages","showTyping","message","hideTyping","addMessage","method","addMessages","removeMessage","removeMessages","scroll","renderMessages","layout","clear","title-right-text","subtitle","close-button","close-timeout","close-on-click","css-class","notification","activeIndex","exposed","photos","exposition","exposition-hide-captions","popup-push","routable-modals","captions-theme","navbar","toolbar","page-back-link-text","page-close-link-text","navbar-show-count","navbar-of-text","icons-color","expositionToggle","expositionEnable","expositionDisable","tap","click","doubleTap","doubleClick","slideChange","lazyImageLoad","lazyImageReady","photoBrowser","pieChart","hidden","checked","toggle","change"],"mappings":"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","file":"../dmxFramework7/dmxFramework7.js","sourcesContent":["if (!Framework7) {\r\n    alert('Framework7 missing!');\r\n}\r\n\r\ndmx.f7 = {\r\n    events: null,\r\n    init: function(rootEl, params) {\r\n        var events = dmx.f7.events || new Framework7.Events();\r\n        var f7Params = Object.assign({}, params, {\r\n            root: rootEl\r\n        });\r\n\r\n        if (window.routes && window.routes.length && !f7Params.routes) {\r\n            f7Params.routes = routes;\r\n        }\r\n\r\n        var instance = new Framework7(f7Params);\r\n\r\n        if (instance.initialized) {\r\n            events.emit('ready', instance);\r\n        } else {\r\n            instance.once('init', function() {\r\n                events.emit('ready', instance);\r\n            });\r\n        }\r\n\r\n        return instance;\r\n    },\r\n    ready: function(callback) {\r\n        if (!callback) return;\r\n        if (Framework7.instance) {\r\n            callback(Framework7.instance);\r\n        } else {\r\n            dmx.f7.events.once('ready', callback);\r\n        }\r\n    }\r\n}\r\n\r\ndmx.config.mapping['.view'] = 'f7-view';\r\ndmx.config.mapping['.page'] = 'f7-page';\r\ndmx.config.mapping['.popup'] = 'f7-popup';\r\ndmx.config.mapping['.login-screen'] = 'f7-login-screen';\r\ndmx.config.mapping['.actions-modal'] = 'f7-actions-modal';\r\ndmx.config.mapping['.progressbar'] = 'f7-progressbar';\r\ndmx.config.mapping['.toggle:not(.toggle-init)'] = 'f7-toggle';","dmx.Actions({\r\n    'f7.toast.show': function(options) {\r\n        Framework7.instance.toast.create({\r\n            destroyOnClose: true,\r\n            icon: this.parse(options.icon),\r\n            text: this.parse(options.text),\r\n            position: this.parse(options.position) || 'bottom',\r\n            horizontalPosition: this.parse(options.horizontalPosition) || 'left',\r\n            closeButton: !!this.parse(options.closeButton),\r\n            closeButtonColor: this.parse(options.closeButtonColor),\r\n            closeButtonText: this.parse(options.closeButtonText) || 'Ok',\r\n            closeTimeout: this.parse(options.closeTimeout) || undefined\r\n        }).open();\r\n    }\r\n});","dmx.Actions({\r\n    'f7.dialog.alert': function(options) {\r\n        var text = this.parse(options.text);\r\n        var title = this.parse(options.title);\r\n\r\n        return new Promise(function(resolve) {\r\n            Framework7.instance.dialog.alert(text, title, resolve);\r\n        });\r\n    },\r\n\r\n    'f7.dialog.confirm': function(options) {\r\n        var self = this;\r\n        var text = this.parse(options.text);\r\n        var title = this.parse(options.title);\r\n\r\n        return new Promise(function(resolve) {\r\n            Framework7.instance.dialog.confirm(text, title, function() {\r\n                if (options.then) {\r\n                    self._exec(options.then).then(function() { resolve(true); });\r\n                } else {\r\n                    resolve(true);\r\n                }\r\n            }, function() {\r\n                if (options.else) {\r\n                    self._exec(options.else).then(function() { resolve(false); });\r\n                } else {\r\n                    resolve(false);\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    'f7.dialog.prompt': function(options) {\r\n        var text = this.parse(options.text);\r\n        var title = this.parse(options.title);\r\n        var defaultValue = this.parse(options.defaultValue);\r\n\r\n        return new Promise(function(resolve) {\r\n            Framework7.instance.dialog.prompt(text, title, function(value) {\r\n                resolve(value);\r\n            }, function() {\r\n                resolve(null);\r\n            }, defaultValue);\r\n        });\r\n    },\r\n\r\n    'f7.dialog.login': function(options) {\r\n        var text = this.parse(options.text);\r\n        var title = this.parse(options.title);\r\n\r\n        return new Promise(function(resolve) {\r\n            Framework7.instance.dialog.login(text, title, function(username, password) {\r\n                resolve({\r\n                    username: username,\r\n                    password: password\r\n                });\r\n            }, function() {\r\n                resolve(null);\r\n            });\r\n        });\r\n    },\r\n\r\n    'f7.dialog.password': function(options) {\r\n        var text = this.parse(options.text);\r\n        var title = this.parse(options.title);\r\n\r\n        return new Promise(function(resolve) {\r\n            Framework7.instance.dialog.password(text, title, function(password) {\r\n                resolve(password);\r\n            }, function() {\r\n                resolve(null);\r\n            });\r\n        });\r\n    },\r\n\r\n    'f7.dialog.preloader': function(options) {\r\n        var title = this.parse(options.title);\r\n        var color = this.parse(options.color);\r\n\r\n        Framework7.instance.dialog.preloader(title, color);\r\n    },\r\n\r\n    'f7.dialog.close': function(options) {\r\n        Framework7.instance.dialog.close();\r\n    }\r\n});","dmx.Actions({\r\n    'f7.progressbar.show': function(options) {\r\n        Framework7.instance.progressbar.show(this.parse(options.color));\r\n    },\r\n    \r\n    'f7.progressbar.set': function(options) {\r\n        Framework7.instance.progressbar.set(this.parse(options.progress), this.parse(options.duration));\r\n    },\r\n    \r\n    'f7.progressbar.hide': function(options) {\r\n        Framework7.instance.progressbar.hide();\r\n    }\r\n});","dmx.Actions({\r\n    'f7.preloader.show': function(options) {\r\n        Framework7.instance.preloader.show();\r\n    },\r\n    \r\n    'f7.preloader.hide': function(options) {\r\n        Framework7.instance.preloader.hide();\r\n    }\r\n});","dmx.Component('f7-app', {\r\n\r\n    initialData: {\r\n    },\r\n\r\n    attributes: {\r\n        'name': {\r\n            type: String,\r\n            default: 'Framework7'\r\n        },\r\n\r\n        'version': {\r\n            type: String,\r\n            default: '1.0.0'\r\n        },\r\n\r\n        'theme': {\r\n            type: String,\r\n            default: 'auto'\r\n        },\r\n\r\n        'auto-dark-theme': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'params': {\r\n            type: Object,\r\n            default: {}\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        alert: function(msg) {\r\n            if (!this.f7) return;\r\n            this.f7.dialog.alert(msg);\r\n        },\r\n\r\n        showPreloader: function(color) {\r\n            if (!this.f7) return;\r\n            this.f7.preloader.show(color);\r\n        },\r\n\r\n        hidePreloader: function() {\r\n            if (!this.f7) return;\r\n            this.f7.preloader.hide();\r\n        },\r\n\r\n        showProgress: function(color) {\r\n            if (!this.f7) return;\r\n            this.f7.progressbar.show(color);\r\n        },\r\n\r\n        setProgress: function(progress, duration) {\r\n            if (!this.f7) return;\r\n            this.f7.progressbar.set(progress, duration);\r\n        },\r\n\r\n        hideProgress: function(color) {\r\n            if (!this.f7) return;\r\n            this.f7.progressbar.hide();\r\n        }\r\n    },\r\n\r\n    render: function (node) {\r\n        var theme = this.props.theme;\r\n        if (theme == 'auto' && document.location.search.indexOf('theme=') >= 0) {\r\n            theme = document.location.search.split('theme=')[1].split('&')[0];\r\n        }\r\n        \r\n        this.f7 = dmx.f7.init(node, Object.assign(this.props.params, {\r\n            id: 'io.framework7.' + this.name,\r\n            name: this.props.name,\r\n            version: this.props.version,\r\n            theme: theme,\r\n            autoDarkTheme: this.props['auto-dark-theme'],\r\n            view: {\r\n                stackPages: true\r\n            }\r\n        }));\r\n\r\n        this.$parse();\r\n    }\r\n\r\n});","dmx.Component('f7-view', {\r\n\r\n    constructor: function (node, parent) {\r\n        this.onPageInit = this.onPageInit.bind(this);\r\n        this.onPageBeforeRemove = this.onPageBeforeRemove.bind(this);\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    methods: {\r\n\r\n        navigate: function (url, options) {\r\n            if (this.f7View.router) {\r\n                this.f7View.router.navigate(url, options);\r\n            }\r\n        },\r\n\r\n        back: function (url, options) {\r\n            if (this.f7View.router) {\r\n                this.f7View.router.back(url, options);\r\n            }\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.f7View.router) {\r\n                this.f7View.router.refreshPage();\r\n            }\r\n        },\r\n\r\n        clearHistory: function() {\r\n            if (this.f7View.router) {\r\n                this.f7View.router.clearPreviousHistory();\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    render: function (node) {\r\n        this.f7View = Framework7.instance.views.create(node);\r\n        this.f7View.on('pageInit', this.onPageInit);\r\n        this.f7View.on('pageReinit', this.onPageReinit);\r\n        this.f7View.on('pageBeforeRemove', this.onPageBeforeRemove);\r\n\r\n        this.$parse();\r\n    },\r\n\r\n    onPageInit: function (page) {\r\n        var Component = dmx.Component('f7-page');\r\n        var child = new Component(page.el, this);\r\n        child.set('route', page.route);\r\n        this.children.push(child);\r\n        this.set(child.name, child.data);\r\n        page.dmxComponent = child;\r\n    },\r\n\r\n    onPageReinit: function (page) {\r\n        if (page.dmxComponent) {\r\n            page.dmxComponent.set('route', page.route);\r\n        }\r\n    },\r\n\r\n    onPageBeforeRemove: function (page) {\r\n        var index = this.children.findIndex(function (child) {\r\n            return child.$node == page.el;\r\n        });\r\n        if (index != -1) {\r\n            this.del(this.children[index].name);\r\n            this.children.splice(index, 1);\r\n        }\r\n    },\r\n\r\n    destroy: function () {\r\n        if (this.f7View) {\r\n            this.f7View.off('pageInit', this.onPageInit);\r\n            this.f7View.off('pageReinit', this.onPageReinit);\r\n            this.f7View.off('pageBeforeRemove', this.onPageBeforeRemove);\r\n            if (this.f7View.destroy) this.f7View.destroy();\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-page', {\r\n\r\n    initialData: {\r\n        route: null\r\n    },\r\n\r\n    render: function (node) {\r\n        this.$parse();\r\n    }\r\n\r\n});","dmx.Component('f7-popup', {\r\n\r\n    initialData: {\r\n        opened: false\r\n    },\r\n\r\n    attributes: {\r\n        'close-on-escape': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'swipe-to-close': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'opened': {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        open: function(animate) {\r\n            if (!this.f7Popup) return;\r\n            this.f7Popup.open(animate);\r\n        },\r\n\r\n        close: function(animate) {\r\n            if (!this.f7Popup) return;\r\n            this.f7Popup.close(animate);\r\n        }\r\n    },\r\n\r\n    events: {\r\n        open: Event,\r\n        opened: Event,\r\n        close: Event,\r\n        closed: Event\r\n    },\r\n\r\n    render: function (node) {\r\n        var popupParams = {\r\n            el: node,\r\n            on: {\r\n                open: this.dispatchEvent.bind(this, 'open'),\r\n                opened: this.dispatchEvent.bind(this, 'opened'),\r\n                close: this.dispatchEvent.bind(this, 'close'),\r\n                closed: this.dispatchEvent.bind(this, 'closed')\r\n            },\r\n            closeOnEscape: this.props['close-on-escape'],\r\n            swipeToClose: this.props['swipe-to-close']\r\n        };\r\n\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.f7Popup = f7.popup.create(popupParams);\r\n            self.f7Popup.on('opened', function() { self.set('opened', true); });\r\n            self.f7Popup.on('closed', function() { self.set('opened', false); });\r\n            if (self.props.opened) {\r\n                self.f7Popup.open(false);\r\n            }\r\n        });\r\n\r\n        this.$parse();\r\n    },\r\n\r\n    update: function(props) {\r\n        if (props.opened != this.props.opened) {\r\n            if (this.props.opened) {\r\n                this.f7Popup.open();\r\n            } else {\r\n                this.f7Popup.close();\r\n            }\r\n        }\r\n\r\n        this.set('opened', this.f7Popup.opened);\r\n    },\r\n\r\n    destroy: function() {\r\n        if (this.f7Popup) {\r\n            this.f7Popup.destroy();\r\n            this.f7Popup = undefined;\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-login-screen', {\r\n\r\n    initialData: {\r\n        opened: false\r\n    },\r\n\r\n    attributes: {\r\n        'opened': {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        open: function(animate) {\r\n            if (!this.f7LoginScreen) return;\r\n            this.f7LoginScreen.open(animate);\r\n        },\r\n\r\n        close: function(animate) {\r\n            if (!this.f7LoginScreen) return;\r\n            this.f7LoginScreen.close(animate);\r\n        }\r\n    },\r\n\r\n    events: {\r\n        open: Event,\r\n        opened: Event,\r\n        close: Event,\r\n        closed: Event\r\n    },\r\n\r\n    render: function (node) {\r\n        var loginScreenParams = {\r\n            el: node,\r\n            on: {\r\n                open: this.dispatchEvent.bind(this, 'open'),\r\n                opened: this.dispatchEvent.bind(this, 'opened'),\r\n                close: this.dispatchEvent.bind(this, 'close'),\r\n                closed: this.dispatchEvent.bind(this, 'closed')\r\n            }\r\n        };\r\n\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.f7LoginScreen = f7.loginScreen.create(loginScreenParams);\r\n            self.f7LoginScreen.on('opened', function() { self.set('opened', true); });\r\n            self.f7LoginScreen.on('closed', function() { self.set('opened', false); });\r\n            if (self.props.opened) {\r\n                self.f7LoginScreen.open(false);\r\n            }\r\n        });\r\n\r\n        this.$parse();\r\n    },\r\n\r\n    update: function(props) {\r\n        if (props.opened != this.props.opened) {\r\n            if (this.props.opened) {\r\n                this.f7LoginScreen.open();\r\n            } else {\r\n                this.f7LoginScreen.close();\r\n            }\r\n        }\r\n\r\n        this.set('opened', this.f7LoginScreen.opened);\r\n    },\r\n\r\n    destroy: function() {\r\n        if (this.f7LoginScreen) {\r\n            this.f7LoginScreen.destroy();\r\n            this.f7LoginScreen = undefined;\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-actions-modal', {\r\n\r\n    initialData: {\r\n        opened: false\r\n    },\r\n\r\n    attributes: {\r\n        'close-by-outside-click': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'close-on-escape': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'opened': {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        open: function(animate) {\r\n            if (!this.component) return;\r\n            this.component.open(animate);\r\n        },\r\n\r\n        close: function(animate) {\r\n            if (!this.component) return;\r\n            this.component.close(animate);\r\n        }\r\n    },\r\n\r\n    events: {\r\n        open: Event,\r\n        opened: Event,\r\n        close: Event,\r\n        closed: Event\r\n    },\r\n\r\n    render: function (node) {\r\n        var params = {\r\n            el: node,\r\n            on: {\r\n                open: this.dispatchEvent.bind(this, 'open'),\r\n                opened: this.dispatchEvent.bind(this, 'opened'),\r\n                close: this.dispatchEvent.bind(this, 'close'),\r\n                closed: this.dispatchEvent.bind(this, 'closed')\r\n            },\r\n            closeByOutsideClick: this.props['close-by-outside-click'],\r\n            closeOnEscape: this.props['close-on-escape']\r\n        };\r\n\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.component = f7.actions.create(params);\r\n            self.component.on('opened', function() { self.set('opened', true); });\r\n            self.component.on('closed', function() { self.set('opened', false); });\r\n            if (self.props.opened) {\r\n                self.component.open(false);\r\n            }\r\n        });\r\n\r\n        this.$parse();\r\n    },\r\n\r\n    update: function(props) {\r\n        if (props.opened != this.props.opened) {\r\n            if (this.props.opened) {\r\n                this.component.open();\r\n            } else {\r\n                this.component.close();\r\n            }\r\n        }\r\n\r\n        this.set('opened', this.component.opened);\r\n    },\r\n\r\n    destroy: function() {\r\n        if (this.component) {\r\n            this.component.destroy();\r\n            this.component = undefined;\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-area-chart', {\r\n\r\n    attributes: {\r\n        'datasets': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'line-chart': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'axis': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'axis-labels': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'tooltip': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'legend': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'toggle-datasets': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'max-axis-labels': {\r\n            type: Number,\r\n            default: 8\r\n        }\r\n    },\r\n\r\n    render: function (node) {\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.component = f7.areaChart.create({\r\n                el: node,\r\n                datasets: self.props['datasets'],\r\n                lineChart: self.props['line-chart'],\r\n                axis: self.props['axis'],\r\n                axisLabels: self.props['axis-labels'],\r\n                tooltip: self.props['tooltip'],\r\n                legend: self.props['legend'],\r\n                toggleDatasets: self.props['toggle-datasets'],\r\n                maxAxisLabels: self.props['max-axis-labels']\r\n            });\r\n        });\r\n    },\r\n\r\n    update: function(props) {\r\n        if (!dmx.equal(props, this.props)) {\r\n            this.component.update({\r\n                datasets: self.props['datasets'],\r\n                lineChart: self.props['line-chart'],\r\n                axis: self.props['axis'],\r\n                axisLabels: self.props['axis-labels'],\r\n                tooltip: self.props['tooltip'],\r\n                legend: self.props['legend'],\r\n                toggleDatasets: self.props['toggle-datasets'],\r\n                maxAxisLabels: self.props['max-axis-labels']\r\n            });\r\n        }\r\n    },\r\n\r\n    destroy: function() {\r\n        if (this.component) {\r\n            this.component.destroy();\r\n            this.component = undefined;\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-gauge', {\r\n\r\n    attributes: {\r\n        'type': {\r\n            type: String,\r\n            default: 'circle'\r\n        },\r\n\r\n        'value': {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n\r\n        'size': {\r\n            type: Number,\r\n            default: 200\r\n        },\r\n\r\n        'bg-color': {\r\n            type: String,\r\n            default: 'transparent'\r\n        },\r\n\r\n        'border-bg-color': {\r\n            type: String,\r\n            default: '#eeeeee'\r\n        },\r\n\r\n        'border-color': {\r\n            type: String,\r\n            default: '#000000'\r\n        },\r\n\r\n        'border-width': {\r\n            type: String,\r\n            default: '10'\r\n        },\r\n\r\n        'value-text': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'value-text-color': {\r\n            type: String,\r\n            default: '#000000'\r\n        },\r\n\r\n        'value-font-size': {\r\n            type: String,\r\n            default: '31'\r\n        },\r\n\r\n        'value-font-weight': {\r\n            type: String,\r\n            default: '500'\r\n        },\r\n\r\n        'label-text': {\r\n            type: String,\r\n            default: null\r\n        },\r\n        \r\n        'label-text-color': {\r\n            type: String,\r\n            default: '#888888'\r\n        },\r\n\r\n        'label-font-size': {\r\n            type: String,\r\n            default: '14'\r\n        },\r\n\r\n        'label-font-weight': {\r\n            type: String,\r\n            default: '400'\r\n        }\r\n    },\r\n\r\n    getProps: function() {\r\n        return Object.entries(this.props).reduce(function(o, entry) {\r\n            o[entry[0].replace(/\\-(.)?/g, function(m, c) { return c.toUpperCase() })] = entry[1];\r\n            return o;\r\n        }, {});\r\n    },\r\n\r\n    render: function (node) {\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.component = f7.gauge.create(Object.assign({\r\n                el: node\r\n            }, this.getProps()));\r\n        });\r\n    },\r\n\r\n    update: function(props) {\r\n        if (!dmx.equal(props, this.props)) {\r\n            this.component.update(this.getProps());\r\n        }\r\n    },\r\n\r\n    destroy: function() {\r\n        if (this.component) {\r\n            this.component.destroy();\r\n            this.component = undefined;\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-messages', {\r\n\r\n    attributes: {\r\n        'new-messages-first': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'messages': {\r\n            type: Array,\r\n            default: []\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        showTyping: function(message) {\r\n            if (!this.component) return;\r\n            this.component.showTyping(message);\r\n        },\r\n\r\n        hideTyping: function() {\r\n            if (!this.component) return;\r\n            this.component.hideTyping();\r\n        },\r\n\r\n        addMessage: function(message, method, animate) {\r\n            if (!this.component) return;\r\n            this.component.addMessage(message, method, animate);\r\n        },\r\n\r\n        addMessages: function(messages, method, animate) {\r\n            if (!this.component) return;\r\n            this.component.addMessages(messages, method, animate);\r\n        },\r\n\r\n        removeMessage: function(message) {\r\n            if (!this.component) return;\r\n            this.component.removeMessage(message);\r\n        },\r\n\r\n        removeMessages: function(messages) {\r\n            if (!this.component) return;\r\n            this.component.removeMessages(messages);\r\n        },\r\n\r\n        scroll: function(duration, position) {\r\n            if (!this.component) return;\r\n            this.component.scroll(duration, position);\r\n        },\r\n\r\n        renderMessages: function() {\r\n            if (!this.component) return;\r\n            this.component.renderMessages();\r\n        },\r\n\r\n        layout: function() {\r\n            if (!this.component) return;\r\n            this.component.layout();\r\n        },\r\n\r\n        clear: function() {\r\n            if (!this.component) return;\r\n            this.component.clear();\r\n        }\r\n    },\r\n\r\n    getProps: function() {\r\n        return Object.entries(this.props).reduce(function(o, entry) {\r\n            o[entry[0].replace(/\\-(.)?/g, function(m, c) { return c.toUpperCase() })] = entry[1];\r\n            return o;\r\n        }, {});\r\n    },\r\n\r\n    render: function (node) {\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.component = f7.messages.create(Object.assign({\r\n                el: node\r\n            }, self.getProps()));\r\n        });\r\n        this.$parse();\r\n    },\r\n\r\n    update: function(props) {\r\n        if (Framework7.instance && !dmx.equal(props, this.props)) {\r\n            this.component.destroy();\r\n            this.component = Framework7.instance.messages.create(Object.assign({\r\n                el: this.$node\r\n            }, this.getProps()))\r\n        }\r\n    },\r\n\r\n    destroy: function() {\r\n        if (this.component) {\r\n            this.component.destroy();\r\n            this.component = undefined;\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-notification', {\r\n\r\n    attributes: {\r\n        'icon': {\r\n            type: String\r\n        },\r\n\r\n        'title': {\r\n            type: String\r\n        },\r\n\r\n        'title-right-text': {\r\n            type: String\r\n        },\r\n\r\n        'subtitle': {\r\n            type: String\r\n        },\r\n\r\n        'text': {\r\n            type: String\r\n        },\r\n\r\n        'close-button': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'close-timeout': {\r\n            type: Number\r\n        },\r\n\r\n        'close-on-click': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'swipe-to-close': {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n\r\n        'css-class': {\r\n            type: String\r\n        },\r\n\r\n        'opened': {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        open: function(animate) {\r\n            if (!this.component) return;\r\n            this.component.open(animate);\r\n        },\r\n\r\n        close: function(animate) {\r\n            if (!this.component) return;\r\n            this.component.close(animate);\r\n        }\r\n    },\r\n\r\n    events: {\r\n        open: Event,\r\n        opened: Event,\r\n        close: Event,\r\n        closed: Event\r\n    },\r\n\r\n    getProps: function() {\r\n        return Object.entries(this.props).reduce(function(o, entry) {\r\n            o[entry[0].replace(/\\-(.)?/g, function(m, c) { return c.toUpperCase() })] = entry[1];\r\n            return o;\r\n        }, {});\r\n    },\r\n\r\n    render: function (node) {\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.component = f7.notification.create(Object.assign({\r\n                on: {\r\n                    open: this.dispatchEvent.bind(this, 'open'),\r\n                    opened: this.dispatchEvent.bind(this, 'opened'),\r\n                    close: this.dispatchEvent.bind(this, 'close'),\r\n                    closed: this.dispatchEvent.bind(this, 'closed')\r\n                }\r\n            }, this.getProps()));\r\n\r\n            self.component.on('opened', function() { self.set('opened', true); });\r\n            self.component.on('closed', function() { self.set('opened', false); });\r\n            \r\n            if (self.props.opened) {\r\n                self.component.open(false);\r\n            }\r\n        });\r\n        this.$parse();\r\n    },\r\n\r\n    update: function(props) {\r\n        if (Framework7.instance && !dmx.equal(props, this.props)) {\r\n            Framework7.instance.notification.destroy(this.component.el);\r\n\r\n            this.component = Framework7.instance.notification.create(Object.assign({\r\n                on: {\r\n                    open: this.dispatchEvent.bind(this, 'open'),\r\n                    opened: this.dispatchEvent.bind(this, 'opened'),\r\n                    close: this.dispatchEvent.bind(this, 'close'),\r\n                    closed: this.dispatchEvent.bind(this, 'closed')\r\n                }\r\n            }, this.getProps()));\r\n\r\n            var self = this;\r\n            this.component.on('opened', function() { self.set('opened', true); });\r\n            this.component.on('closed', function() { self.set('opened', false); });\r\n\r\n            if (this.props.opened) {\r\n                this.component.open(false);\r\n            }\r\n        }\r\n\r\n        this.set('opened', this.component.opened);\r\n    },\r\n\r\n    destroy: function() {\r\n        if (this.component) {\r\n            Framework7.instance.notification.destroy(this.component.el);\r\n            this.component = undefined;\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-photo-browser', {\r\n\r\n    initialData: {\r\n        activeIndex: 0,\r\n        exposed: false,\r\n        opened: false\r\n    },\r\n\r\n    attributes: {\r\n        'photos': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'exposition': {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n\r\n        'exposition-hide-captions': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'swipe-to-close': {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n\r\n        'popup-push': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'routable-modals': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'url': {\r\n            type: String,\r\n            default: 'photos/'\r\n        },\r\n\r\n        'type': {\r\n            type: String,\r\n            default: 'standalone'\r\n        },\r\n\r\n        'theme': {\r\n            type: String,\r\n            default: 'light'\r\n        },\r\n\r\n        'captions-theme': {\r\n            type: String\r\n        },\r\n\r\n        'navbar': {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n\r\n        'toolbar': {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n\r\n        'page-back-link-text': {\r\n            type: String,\r\n            default: 'Back'\r\n        },\r\n\r\n        'page-close-link-text': {\r\n            type: String,\r\n            default: 'Close'\r\n        },\r\n\r\n        'navbar-show-count': {\r\n            type: Boolean,\r\n            default: undefined\r\n        },\r\n\r\n        'navbar-of-text': {\r\n            type: String,\r\n            default: 'of'\r\n        },\r\n\r\n        'icons-color': {\r\n            type: String\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        open: function(index) {\r\n            if (!this.component) return;\r\n            this.component.open(index);\r\n        },\r\n\r\n        close: function() {\r\n            if (!this.component) return;\r\n            this.component.close();\r\n        },\r\n\r\n        expositionToggle: function() {\r\n            if (!this.component) return;\r\n            this.component.expositionToggle();\r\n        },\r\n\r\n        expositionEnable: function() {\r\n            if (!this.component) return;\r\n            this.component.expositionEnable();\r\n        },\r\n\r\n        expositionDisable: function() {\r\n            if (!this.component) return;\r\n            this.component.expositionDisable();\r\n        }\r\n    },\r\n\r\n    events: {\r\n        tap: Event,\r\n        click: Event,\r\n        doubleTap: Event,\r\n        doubleClick: Event,\r\n        slideChange: Event,\r\n        lazyImageLoad: Event,\r\n        lazyImageReady: Event,\r\n        open: Event,\r\n        opened: Event,\r\n        close: Event,\r\n        closed: Event\r\n    },\r\n\r\n    getProps: function() {\r\n        return Object.entries(this.props).reduce(function(o, entry) {\r\n            o[entry[0].replace(/\\-(.)?/g, function(m, c) { return c.toUpperCase() })] = entry[1];\r\n            return o;\r\n        }, {});\r\n    },\r\n\r\n    render: function (node) {\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.component = f7.photoBrowser.create(this.getProps());\r\n            self.component.on('opened', function() { self.set('opened', true) });\r\n            self.component.on('closed', function() { self.set('opened', false) });\r\n            self.component.on('tap', self.dispatchEvent.bind(self, 'tap'))\r\n            self.component.on('click', self.dispatchEvent.bind(self, 'click'))\r\n            self.component.on('doubleTap', self.dispatchEvent.bind(self, 'doubleTap'))\r\n            self.component.on('doubleClick', self.dispatchEvent.bind(self, 'doubleClick'))\r\n            self.component.on('slideChange', self.dispatchEvent.bind(self, 'slideChange'))\r\n            self.component.on('lazyImageLoad', self.dispatchEvent.bind(self, 'lazyImageLoad'))\r\n            self.component.on('lazyImageReady', self.dispatchEvent.bind(self, 'lazyImageReady'))\r\n            self.component.on('open', self.dispatchEvent.bind(self, 'open'))\r\n            self.component.on('opened', self.dispatchEvent.bind(self, 'opened'))\r\n            self.component.on('close', self.dispatchEvent.bind(self, 'close'))\r\n            self.component.on('closed', self.dispatchEvent.bind(self, 'closed'))\r\n        });\r\n        this.$parse();\r\n    },\r\n\r\n    update: function(props) {\r\n        if (Framework7.instance && !dmx.equal(props, this.props)) {\r\n            var self = this;\r\n            this.component.destroy();\r\n            this.component = Framework7.instance.photoBrowser.create(this.getProps());\r\n            this.component.on('opened', function() { self.set('opened', true) });\r\n            this.component.on('closed', function() { self.set('opened', false) });\r\n            this.component.on('opened', function() { self.set('opened', true) });\r\n            this.component.on('closed', function() { self.set('opened', false) });\r\n            this.component.on('tap', this.dispatchEvent.bind(this, 'tap'))\r\n            this.component.on('click', this.dispatchEvent.bind(this, 'click'))\r\n            this.component.on('doubleTap', this.dispatchEvent.bind(this, 'doubleTap'))\r\n            this.component.on('doubleClick', this.dispatchEvent.bind(this, 'doubleClick'))\r\n            this.component.on('slideChange', this.dispatchEvent.bind(this, 'slideChange'))\r\n            this.component.on('lazyImageLoad', this.dispatchEvent.bind(this, 'lazyImageLoad'))\r\n            this.component.on('lazyImageReady', this.dispatchEvent.bind(this, 'lazyImageReady'))\r\n            this.component.on('open', this.dispatchEvent.bind(this, 'open'))\r\n            this.component.on('opened', this.dispatchEvent.bind(this, 'opened'))\r\n            this.component.on('close', this.dispatchEvent.bind(this, 'close'))\r\n            this.component.on('closed', this.dispatchEvent.bind(this, 'closed'))\r\n        }\r\n\r\n        this.set('activeIndex', this.component.activeIndex);\r\n        this.set('exposed', this.component.exposed);\r\n        this.set('opened', this.component.opened);\r\n    },\r\n\r\n    destroy: function() {\r\n        if (this.component) {\r\n            this.component.destroy();\r\n            this.component = undefined;\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-pie-chart', {\r\n\r\n    attributes: {\r\n        'datasets': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'size': {\r\n            type: Number,\r\n            default: 320\r\n        },\r\n\r\n        'tooltip': {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    getProps: function() {\r\n        return Object.entries(this.props).reduce(function(o, entry) {\r\n            o[entry[0].replace(/\\-(.)?/g, function(m, c) { return c.toUpperCase() })] = entry[1];\r\n            return o;\r\n        }, {});\r\n    },\r\n\r\n    render: function (node) {\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.component = f7.pieChart.create(Object.assign({\r\n                el: node\r\n            }, self.getProps()));\r\n        });\r\n    },\r\n\r\n    update: function(props) {\r\n        if (!dmx.equal(props, this.props)) {\r\n            this.component.update(this.getProps());\r\n        }\r\n    },\r\n\r\n    destroy: function() {\r\n        if (this.component) {\r\n            this.component.destroy();\r\n            this.component = undefined;\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-progressbar', {\r\n\r\n    initialData: {\r\n        progress: 0\r\n    },\r\n\r\n    attributes: {\r\n        'progress': {\r\n            type: Number,\r\n            default: null\r\n        },\r\n\r\n        'color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'hidden': {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        set: function(progress, duration) {\r\n            Framework7.instance.progressbar.set(this.$node, progress, duration);\r\n        },\r\n\r\n        show: function() {\r\n            this.props.hidden = false;\r\n            this.update({});\r\n        },\r\n\r\n        hide: function() {\r\n            this.props.hidden = true;\r\n            this.update({});\r\n        }\r\n    },\r\n\r\n    render: function (node) {\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.update({});\r\n        });\r\n    },\r\n\r\n    update: function(props) {\r\n        if (Framework7.instance && !dmx.equal(props, this.props)) {\r\n            if (this.props.hidden) {\r\n                Framework7.instance.progressbar.hide(this.$node);\r\n            } else {\r\n                Framework7.instance.progressbar.show(this.$node, this.props.progress, this.props.color);\r\n            }\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-toggle', {\r\n\r\n    initialData: {\r\n        checked: false\r\n    },\r\n\r\n    attributes: {\r\n        'checked': {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        toggle: function() {\r\n            this.component.toggle();\r\n            this.update({});\r\n        }\r\n    },\r\n\r\n    events: {\r\n        change: Event\r\n    },\r\n\r\n    render: function (node) {\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.component = f7.toggle.create({el: node});\r\n            self.component.on('change', function() { self.update({}) });\r\n\r\n            if(self.component.checked != self.props.checked) {\r\n                self.component.toggle();\r\n            }\r\n\r\n            self.set('checked', self.component.checked);\r\n        });\r\n        this.$parse();\r\n    },\r\n\r\n    update: function(props) {\r\n        if(this.component.checked != this.props.checked) {\r\n            this.component.toggle();\r\n        }\r\n\r\n        this.set('checked', this.component.checked);\r\n    },\r\n\r\n    destroy: function(props) {\r\n        if (this.component) {\r\n            Framework7.instance.toggle.destroy(this.component.el);\r\n            this.component = undefined;\r\n        }\r\n    }\r\n\r\n});"]}