{"version":3,"sources":["components/calendar.js","components/calendarSourceBase.js","components/calendarSource.js","components/calendarSourceGoogle.js","components/calendarEvent.js"],"names":["dmx","Component","initialData","title","activeStart","activeEnd","currentStart","currentEnd","constructor","node","parent","this","onDatesRender","bind","onDateClick","onEventClick","onEventMouseEnter","onEventMouseLeave","onEventDrop","onEventResize","onEventRender","onEventDestroy","onSelect","parseSource","BaseComponent","call","attributes","timezone","type","String","default","date","locale","height","aspect-ratio","Number","view","views","Array","theme","hide-non-current-dates","Boolean","selectable","editable","no-event-overlap","business-hours","google-calendar-api-key","no-fixed-week-count","event-order","event-limit","now-indicator","bs4-tooltip","bs4-tooltip-placement","bs4-tooltip-title","views-options","Object","methods","gotoDate","calendar","updateSize","prev","next","prevYear","nextYear","today","events","dateclick","MouseEvent","eventclick","eventmouseenter","eventmouseleave","eventdrop","Event","eventresize","select","info","set","parseDate","dispatchEvent","jsEvent","dateStr","allDay","preventDefault","event","getEventProps","scope","DataScope","source","internalEventSource","extendedProps","bs4Tooltip","$","el","tooltip","placement","parse","bs4TooltipPlacement","bs4TooltipTitle","props","start","startStr","end","endStr","child","register","$parseAttributes","self","prototype","dom","getAttributes","forEach","attr","name","$addBinding","value","isArray","push","parseAttribute","toCamelCase","argument","modifiers","constraint","binding","removeAttribute","fullName","render","plugins","filter","window","toUpperCase","slice","FullCalendar","Calendar","googleCalendarApiKey","timeZone","defaultDate","defaultView","aspectRatio","themeSystem","selectConstraint","showNonCurrentDates","eventOverlap","businessHours","fixedWeekCount","eventOrder","eventLimit","nowIndicator","datesRender","dateClick","eventClick","eventMouseEnter","eventMouseLeave","eventDrop","eventResize","eventRender","eventDestroy","header","left","center","right","toString","$parse","update","changeView","setOption","equal","beforeDestroy","destroy","id","toISOString","attrName","re","RegExp","replace","nodeType","i","length","attribute","specified","test","split","part","pos","indexOf","substr","getFullYear","getMonth","getDate","str","a","b","console","error","color","background-color","border-color","text-color","class-name","overlap","refetch","getEventSourceById","extends","parseEvents","event-id","event-title","event-url","event-start","event-end","event-all-day","event-days-of-week","event-start-time","event-end-time","event-start-recur","event-end-recur","event-group-id","event-rendering","event-color","event-background-color","event-border-color","event-text-color","event-class-name","event-editable","event-overlap","event-extended-props","success","failure","repeatItems","data","prop","children","addEventSource","assign","onSuccess","onFailure","google-calendar-id","err","url","all-day","days-of-week","start-time","end-time","start-recur","end-recur","group-id","rendering","extended-props"],"mappings":"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","file":"../dmxCalendar/dmxCalendar.js","sourcesContent":["dmx.Component('calendar', {\r\n\r\n    initialData: {\r\n        title: null,\r\n        activeStart: null,\r\n        activeEnd: null,\r\n        currentStart: null,\r\n        currentEnd: null\r\n    },\r\n\r\n    constructor: function(node, parent) {\r\n        this.onDatesRender = this.onDatesRender.bind(this);\r\n        this.onDateClick = this.onDateClick.bind(this);\r\n        this.onEventClick = this.onEventClick.bind(this);\r\n        this.onEventMouseEnter = this.onEventMouseEnter.bind(this);\r\n        this.onEventMouseLeave = this.onEventMouseLeave.bind(this);\r\n        this.onEventDrop = this.onEventDrop.bind(this);\r\n        this.onEventResize = this.onEventResize.bind(this);\r\n        this.onEventRender = this.onEventRender.bind(this);\r\n        this.onEventDestroy = this.onEventDestroy.bind(this);\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.parseSource = this.parseSource.bind(this);\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'timezone': { // moment-timezone or luxon plugin for named timezones\r\n            type: String,\r\n            default: 'local' // \"local\", \"UTC\"\r\n        },\r\n\r\n        'date': {\r\n            type: String,\r\n            default: null // ISO8601 format\r\n        },\r\n\r\n        'locale': { // locales include needed\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'height': { // height of entire calendar\r\n            type: String,\r\n            default: null // interger, \"parent\", \"auto\"\r\n        },\r\n\r\n        'aspect-ratio': { // width-to-height aspect ratio\r\n            type: Number,\r\n            default: 1.35\r\n        },\r\n\r\n        'view': { // dayGrid, timeGrid, list plugin\r\n            type: String,\r\n            default: null // name of view like \"dayGridMonth\"\r\n        },\r\n\r\n        'views': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'theme': { // bootstrap plugin\r\n            type: String,\r\n            default: 'standard' // \"standard\", \"bootstrap\"\r\n        },\r\n\r\n        'hide-non-current-dates': { // dayGrid plugin (dayGridMonth only)\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'selectable': { // interaction plugin\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        /* will use custom parser for this\r\n        'constraint': { // interaction plugin\r\n            type: [String, Object], // https://fullcalendar.io/docs/selectConstraint\r\n            default: null\r\n        },\r\n        */\r\n\r\n        'editable': { // interaction plugin\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n\r\n        'no-event-overlap': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'business-hours': {\r\n            type: Boolean, // https://fullcalendar.io/docs/businessHours\r\n            default: false\r\n        },\r\n\r\n        'google-calendar-api-key': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'no-fixed-week-count': {\r\n            type: Boolean, // https://fullcalendar.io/docs/fixedWeekCount\r\n            default: false\r\n        },\r\n\r\n        'event-order': {\r\n            type: String, // https://fullcalendar.io/docs/eventOrder\r\n            default: 'start,-duration,allDay,title'\r\n        },\r\n\r\n        'event-limit': {\r\n            type: [Boolean, Number], // https://fullcalendar.io/docs/eventLimit\r\n            default: false\r\n        },\r\n\r\n        'now-indicator': {\r\n            type: Boolean, // https://fullcalendar.io/docs/nowIndicator\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip-placement': {\r\n            type: String, // expression\r\n            default: '\"top\"'\r\n        },\r\n\r\n        'bs4-tooltip-title': {\r\n            type: String, // expression\r\n            default: 'event.extendedProps.description || event.title'\r\n        },\r\n\r\n        'views-options': {\r\n            type: Object, // https://fullcalendar.io/docs/view-specific-options\r\n            default: {}\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        gotoDate: function(date) {\r\n            this.calendar.gotoDate(date);\r\n        },\r\n\r\n        updateSize: function() {\r\n            this.calendar.updateSize();\r\n        },\r\n\r\n        prev: function() {\r\n            this.calendar.prev();\r\n        },\r\n\r\n        next: function() {\r\n            this.calendar.next();\r\n        },\r\n\r\n        prevYear: function() {\r\n            this.calendar.prevYear();\r\n        },\r\n\r\n        nextYear: function() {\r\n            this.calendar.nextYear();\r\n        },\r\n\r\n        today: function() {\r\n            this.calendar.today();\r\n        }\r\n    },\r\n\r\n    events: {\r\n        dateclick: MouseEvent, // interaction plugin\r\n        eventclick: MouseEvent,\r\n        eventmouseenter: MouseEvent,\r\n        eventmouseleave: MouseEvent,\r\n        eventdrop: Event,\r\n        eventresize: Event,\r\n        select: Event\r\n    },\r\n\r\n    onDatesRender: function(info) {\r\n        this.set({\r\n            title: info.view.title,\r\n            activeStart: this.parseDate(info.view.activeStart),\r\n            activeEnd: this.parseDate(info.view.activeEnd),\r\n            currentStart: this.parseDate(info.view.currentStart),\r\n            currentEnd: this.parseDate(info.view.currentEnd)\r\n        });\r\n    },\r\n\r\n    onDateClick: function(info) {\r\n        var cancelled  = !this.dispatchEvent('dateclick', info.jsEvent, {\r\n            date: info.dateStr,\r\n            allDay: info.allDay\r\n        });\r\n\r\n        if (cancelled) {\r\n            info.jsEvent.preventDefault();\r\n        }\r\n    },\r\n\r\n    onEventClick: function(info) {\r\n        var cancelled  = !this.dispatchEvent('eventclick', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n\r\n        if (cancelled) {\r\n            info.jsEvent.preventDefault();\r\n        }\r\n    },\r\n\r\n    onEventMouseEnter: function(info) {\r\n        this.dispatchEvent('eventmouseenter', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventMouseLeave: function(info) {\r\n        this.dispatchEvent('eventmouseleave', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventDrop: function(info) {\r\n        this.dispatchEvent('eventdrop', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventResize: function(info) {\r\n        this.dispatchEvent('eventresize', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventRender: function(info) {\r\n        var scope = new dmx.DataScope({\r\n            event: this.getEventProps(info.event)\r\n        }, this);\r\n\r\n        if (info.event.source && info.event.source.internalEventSource.extendedProps && info.event.source.internalEventSource.extendedProps.bs4Tooltip) {\r\n            $(info.el).tooltip({\r\n                placement: dmx.parse(info.event.source.internalEventSource.extendedProps.bs4TooltipPlacement, scope) || 'top',\r\n                title: dmx.parse(info.event.source.internalEventSource.extendedProps.bs4TooltipTitle, scope) || ''\r\n            });\r\n        } else if (this.props['bs4-tooltip']) {\r\n            $(info.el).tooltip({\r\n                placement: dmx.parse(this.props['bs4-tooltip-placement'], scope) || 'top',\r\n                title: dmx.parse(this.props['bs4-tooltip-title'], scope) || ''\r\n            });\r\n        }\r\n    },\r\n\r\n    onEventDestroy: function(info) {\r\n        if (this.props['bs4-tooltip']) {\r\n            $(info.el).tooltip('dispose');\r\n        }\r\n    },\r\n\r\n    onSelect: function(info) {\r\n        this.dispatchEvent('select', info.jsEvent, {\r\n            start: info.startStr,\r\n            end: info.endStr,\r\n            allDay: info.allDay\r\n        });\r\n    },\r\n\r\n    parseSource: function(child) {\r\n        if (child instanceof dmx.Component('calendar-source-base')) {\r\n            child.calendar = this.calendar;\r\n            child.register();\r\n        }\r\n    },\r\n\r\n    $parseAttributes: function(node) {\r\n        var self = this;\r\n\r\n        dmx.BaseComponent.prototype.$parseAttributes.call(this, node);\r\n\r\n        // parse dmx-business-hours\r\n        dmx.dom.getAttributes(node).forEach(function(attr) {\r\n            if (attr.name == 'business-hours') {\r\n                self.$addBinding(attr.value, function(value) {\r\n                    if (value != null) {\r\n                        if (!Array.isArray(this.props['business-hours'])) {\r\n                            self.props['business-hours'] = [];\r\n                        }\r\n\r\n                        self.props['business-hours'].push(value);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        // views options custom parse\r\n        this.parseAttribute(node, 'views-options').forEach(function(attr) {\r\n            self.$addBinding(attr.value, function(value) {\r\n                self.props['views-options'][this.toCamelCase(attr.argument)] = value || {};\r\n            });\r\n        });\r\n\r\n        // constraint custom parse\r\n        this.parseAttribute(node, 'constraint').forEach(function(attr) {\r\n            if (attr.modifiers['business-hours']) {\r\n                // special case for businessHours modifier\r\n                self.props.constraint = 'businessHours';\r\n            } else {\r\n                if (attr.binding) {\r\n                    // dynamic attribute\r\n                    self.$addBinding(attr.value, function(value) {\r\n                        self.props.constraint = value;\r\n                    });\r\n                } else {\r\n                    // static attribute\r\n                    self.props.constraint = attr.value;\r\n                }\r\n            }\r\n\r\n            // we need to remove the attribute so that the default parser doesn't parse it\r\n            node.removeAttribute(attr.fullName);\r\n        });\r\n    },\r\n\r\n    render: function(node) {\r\n        // detect installed plugins\r\n        var plugins = ['interaction', 'dayGrid', 'timeGrid', 'list', 'bootstrap', 'googleCalendar'].filter(function(name) {\r\n            return !!window['FullCalendar' + name[0].toUpperCase() + name.slice(1)];\r\n        });\r\n\r\n        this.calendar = new FullCalendar.Calendar(node, {\r\n            plugins: plugins,\r\n            googleCalendarApiKey: this.props['google-calendar-api-key'],\r\n            timeZone: this.props.timezone,\r\n            defaultDate: this.props.date,\r\n            defaultView: this.props.view,\r\n            locale: this.props.locale,\r\n            height: this.props.height,\r\n            aspectRatio: this.props['aspect-ratio'],\r\n            themeSystem: this.props.theme,\r\n            selectable: this.props.selectable,\r\n            selectConstraint: this.props.constraint,\r\n            editable: this.props.editable,\r\n            showNonCurrentDates: !this.props['hide-non-current-dates'],\r\n            eventOverlap: !this.props['no-event-overlap'],\r\n            businessHours: this.props['business-hours'],\r\n            fixedWeekCount: !this.props['no-fixed-week-count'],\r\n            eventOrder: this.props['event-order'],\r\n            eventLimit: this.props['event-limit'],\r\n            nowIndicator: this.props['now-indicator'],\r\n            datesRender: this.onDatesRender,\r\n            dateClick: this.onDateClick,\r\n            eventClick: this.onEventClick,\r\n            eventMouseEnter: this.onEventMouseEnter,\r\n            eventMouseLeave: this.onEventMouseLeave,\r\n            eventDrop: this.onEventDrop,\r\n            eventResize: this.onEventResize,\r\n            eventRender: this.onEventRender,\r\n            eventDestroy: this.onEventDestroy,\r\n            select: this.onSelect,\r\n            views: this.props['views-options'],\r\n            header: {\r\n                left: 'today prev,next',\r\n                center: 'title',\r\n                right: this.props.views.toString()\r\n            }\r\n        });\r\n\r\n        this.$parse();\r\n\r\n        this.calendar.render();\r\n    },\r\n\r\n    update: function(props) {\r\n        if (props.view != this.props.view) {\r\n            this.calendar.changeView(this.props.view || 'dayGridMonth');\r\n        }\r\n\r\n        if (props.date != this.props.date) {\r\n            this.calendar.gotoDate(this.props.date);\r\n        }\r\n\r\n        if (props.timezone != this.props.timezone) {\r\n            this.calendar.setOption('timeZone', this.props.timezone);\r\n        }\r\n\r\n        if (props.locale != this.props.locale) {\r\n            this.calendar.setOption('locale', this.props.locale);\r\n        }\r\n\r\n        if (props.theme != this.props.theme) {\r\n            this.calendar.setOption('themeSystem', this.props.theme);\r\n        }\r\n\r\n        if (props['hide-non-current-dates'] != this.props['hide-non-current-dates']) {\r\n            this.calendar.setOption('showNonCurrentDates', !this.props['hide-non-current-dates']);\r\n        }\r\n\r\n        if (props.selectable != this.props.selectable) {\r\n            this.calendar.setOption('selectable', this.props.selectable);\r\n        }\r\n\r\n        if (props.editable != this.props.editable) {\r\n            this.calendar.setOption('editable', this.props.editable);\r\n        }\r\n\r\n        if (props['no-event-overlap'] != this.props['no-event-overlap']) {\r\n            this.calendar.setOption('eventOverlap', !this.props['no-event-overlap']);\r\n        }\r\n\r\n        if (!dmx.equal(props['business-hours'], this.props['business-hours'])) {\r\n            this.calendar.setOption('businessHours', this.props['business-hours']);\r\n        }\r\n\r\n        if (!dmx.equal(props.constraint, this.props.constraint)) {\r\n            this.calendar.setOption('selectConstraint', this.props.constraint);\r\n        }\r\n\r\n        if (props['google-calendar-api-key'] != this.props['google-calendar-api-key']) {\r\n            this.calendar.setOption('googleCalendarApiKey', this.props['google-calendar-api-key']);\r\n        }\r\n\r\n        if (props['no-fixed-week-count'] != this.props['no-fixed-week-count']) {\r\n            this.calendar.setOption('fixedWeekCount', !this.props['no-fixed-week-count']);\r\n        }\r\n\r\n        if (props['event-order'] != this.props['event-order']) {\r\n            this.calendar.setOption('eventOrder', this.props['event-order']);\r\n        }\r\n\r\n        if (props['event-limit'] != this.props['event-limit']) {\r\n            this.calendar.setOption('eventLimit', this.props['event-limit']);\r\n        }\r\n\r\n        if (props['now-indicator'] != this.props['now-indicator']) {\r\n            this.calendar.setOption('nowIndicator', this.props['now-indicator']);\r\n        }\r\n\r\n        if (!dmx.equal(props['views-options'], this.props['views-options'])) {\r\n            this.calendar.setOption('views', this.props['views-options']);\r\n        }\r\n    },\r\n\r\n    beforeDestroy: function() {\r\n        this.calendar.destroy();\r\n    },\r\n\r\n    getEventProps: function(event) {\r\n        return {\r\n            id: event.id,\r\n            start: event.start && event.start.toISOString(),\r\n            end: event.end && event.end.toISOString(),\r\n            allDay: event.allDay,\r\n            title: event.title,\r\n            extendedProps: event.extendedProps\r\n        };\r\n    },\r\n\r\n    // special parse required for constraint attribute\r\n    // supports static/dynamic attributes\r\n    parseAttribute: function(node, attrName) {\r\n        var attributes = [];\r\n        var re = new RegExp('^(dmx\\\\-bind:)?' + attrName.replace(/[-[\\]{}()*+?.,\\^$|#\\s]/g, '\\\\$&'), 'i');\r\n\r\n        if (node.nodeType == 1) {\r\n            for (var i = 0; i < node.attributes.length; i++) {\r\n                var attribute = node.attributes[i];\r\n\r\n                if (attribute && attribute.specified && re.test(attribute.name)) {\r\n                    var name = attribute.name;\r\n                    var argument = null;\r\n                    var modifiers = {};\r\n\r\n                    name = name.replace(/^dmx\\-bind:/i, '');\r\n\r\n                    name.split('.').forEach(function(part, i) {\r\n                        if (i === 0) {\r\n                            name = part;\r\n                        } else {\r\n                            var pos = part.indexOf(':');\r\n                            if (pos > 0) {\r\n                                modifiers[part.substr(0, pos)] = part.substr(pos + 1);\r\n                            } else {\r\n                                modifiers[part] = true;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    var pos = name.indexOf(':');\r\n                    if (pos > 0) {\r\n                        argument = name.substr(pos + 1);\r\n                        name = name.substr(0, pos);\r\n                    }\r\n\r\n                    attributes.push({\r\n                        name: name,\r\n                        binding: attribute.name.indexOf('dmx-bind:') === 0,\r\n                        fullName: attribute.name,\r\n                        value: attribute.value,\r\n                        argument: argument,\r\n                        modifiers: modifiers\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    },\r\n\r\n    parseDate: function(date) {\r\n        return date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + (date.getDate())).slice(-2) + ' 00:00:00'\r\n    },\r\n\r\n    toCamelCase: function(str) {\r\n        return str.replace(/-(\\w)/g, function(a, b) {\r\n            return b.toUpperCase();\r\n        });\r\n    }\r\n\r\n});","dmx.Component('calendar-source-base', {\r\n\r\n    constructor: function(node, parent, source) {\r\n        if (parent instanceof dmx.Component('calendar')) {\r\n            this.calendar = parent.calendar;\r\n        } else {\r\n            console.error('calendar-source can only be child of calendar component.');\r\n        }\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    initialData: {\r\n        id: null,\r\n        events: []\r\n    },\r\n\r\n    attributes: {\r\n        'color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'background-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'border-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'text-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'class-name': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'editable': {\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n\r\n        'overlap': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip-placement': {\r\n            type: String, // expression\r\n            default: '\"top\"'\r\n        },\r\n\r\n        'bs4-tooltip-title': {\r\n            type: String, // expression\r\n            default: 'event.extendedProps.description || event.title'\r\n        }\r\n    },\r\n    \r\n    methods: {\r\n        refetch: function() {\r\n            this.refetch();\r\n        }\r\n    },\r\n\r\n    render: function() {\r\n        if (!this.calendar) return;\r\n        this.$parse();\r\n        this.set('id', this.name);\r\n    },\r\n\r\n    refetch: function() {\r\n        this.calendar.getEventSourceById(this.name).refetch();\r\n    },\r\n\r\n    toCamelCase: function(str) {\r\n        return str.replace(/-(\\w)/g, function(a, b) {\r\n            return b.toUpperCase();\r\n        });\r\n    }\r\n\r\n});","dmx.Component('calendar-source', {\r\n\r\n    extends: 'calendar-source-base',\r\n\r\n    constructor: function(node, parent, source) {\r\n        this.parseEvents = this.parseEvents.bind(this);\r\n\r\n        dmx.Component('calendar-source-base').call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'events': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'event-id': {\r\n            type: String,\r\n            default: 'id'\r\n        },\r\n\r\n        'event-title': {\r\n            type: String,\r\n            default: 'title'\r\n        },\r\n\r\n        'event-url': {\r\n            type: String,\r\n            default: 'url'\r\n        },\r\n\r\n        'event-start': {\r\n            type: String,\r\n            default: 'start'\r\n        },\r\n\r\n        'event-end': {\r\n            type: String,\r\n            default: 'end'\r\n        },\r\n\r\n        'event-all-day': {\r\n            type: String,\r\n            default: 'allDay'\r\n        },\r\n\r\n        'event-days-of-week': {\r\n            type: String,\r\n            default: 'daysOfWeek'\r\n        },\r\n\r\n        'event-start-time': {\r\n            type: String,\r\n            default: 'startTime'\r\n        },\r\n\r\n        'event-end-time': {\r\n            type: String,\r\n            default: 'endTime'\r\n        },\r\n\r\n        'event-start-recur': {\r\n            type: String,\r\n            default: 'startRecur'\r\n        },\r\n\r\n        'event-end-recur': {\r\n            type: String,\r\n            default: 'endRecur'\r\n        },\r\n\r\n        'event-group-id': {\r\n            type: String,\r\n            default: 'groupId'\r\n        },\r\n\r\n        'event-rendering': {\r\n            type: String,\r\n            default: 'rendering'\r\n        },\r\n\r\n        'event-color': {\r\n            type: String,\r\n            default: 'color'\r\n        },\r\n\r\n        'event-background-color': {\r\n            type: String,\r\n            default: 'backgroundColor'\r\n        },\r\n\r\n        'event-border-color': {\r\n            type: String,\r\n            default: 'borderColor'\r\n        },\r\n\r\n        'event-text-color': {\r\n            type: String,\r\n            default: 'textColor'\r\n        },\r\n\r\n        'event-class-name': {\r\n            type: String,\r\n            default: 'className'\r\n        },\r\n\r\n        'event-editable': {\r\n            type: String,\r\n            default: 'editable'\r\n        },\r\n\r\n        'event-overlap': {\r\n            type: String,\r\n            default: 'overlap'\r\n        },\r\n\r\n        'event-extended-props': {\r\n            type: String,\r\n            default: '$value'\r\n        }\r\n    },\r\n\r\n    parseEvents: function(info, success, failure) {\r\n        this.events = [];\r\n\r\n        if (Array.isArray(this.props.events)) {\r\n            dmx.repeatItems(this.props.events).forEach(function(data) {\r\n                var scope = new dmx.DataScope(data, this);\r\n                var event = {};\r\n\r\n                for (var prop in this.props) {\r\n                    if (prop.indexOf('event-') === 0) {\r\n                        var value = dmx.parse(this.props[prop], scope);\r\n\r\n                        if (value != null) {\r\n                            event[this.toCamelCase(prop.substr(6))] = value;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.events.push(event);\r\n            }, this);\r\n        }\r\n\r\n        this.children.forEach(function(child) {\r\n            if (child instanceof dmx.Component('calendar-event')) {\r\n                var event = { id: child.name };\r\n\r\n                for (var prop in child.props) {\r\n                    if (child.props[prop] != null) {\r\n                        event[this.toCamelCase(prop)] = child.props[prop];\r\n                    }\r\n                }\r\n\r\n                this.events.push(event);\r\n            }\r\n        }, this);\r\n\r\n        success(this.events);\r\n        \r\n        this.set('events', this.events);\r\n    },\r\n\r\n    render: function() {\r\n        if (!this.calendar) return;\r\n\r\n        this.$parse();\r\n\r\n        var props = {};\r\n\r\n        for (var prop in this.props) {\r\n            if (this.props[prop] != null) {\r\n                props[this.toCamelCase(prop)] = this.props[prop];\r\n            }\r\n        }\r\n        \r\n        this.calendar.addEventSource(Object.assign({\r\n            id: this.name\r\n        }, props, {\r\n            events: this.parseEvents\r\n        }));\r\n\r\n        this.set('id', this.name);\r\n    },\r\n\r\n    update: function(props) {\r\n        if (!dmx.equal(props.events, this.props.events)) {\r\n            this.refetch();\r\n        }\r\n    }\r\n\r\n});","dmx.Component('calendar-source-google', {\r\n\r\n    extends: 'calendar-source-base',\r\n\r\n    constructor: function(node, parent, source) {\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.onFailure = this.onFailure.bind(this);\r\n\r\n        dmx.Component('calendar-source-base').call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'google-calendar-api-key': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'google-calendar-id': {\r\n            type: String,\r\n            default: null\r\n        },\r\n    },\r\n\r\n    events: {\r\n        success: Event,\r\n        failure: Event\r\n    },\r\n\r\n    onSuccess: function() {\r\n        this.dispatchEvent('success');\r\n    },\r\n\r\n    onFailure: function(err) {\r\n        this.dispatchEvent('failure');\r\n    },\r\n\r\n    render: function() {\r\n        if (!this.calendar) return;\r\n\r\n        this.$parse();\r\n\r\n        var props = {};\r\n\r\n        for (var prop in this.props) {\r\n            if (this.props[prop] != null) {\r\n                props[this.toCamelCase(prop)] = this.props[prop];\r\n            }\r\n        }\r\n        \r\n        this.calendar.addEventSource(Object.assign({\r\n            id: this.name,\r\n            success: this.onSuccess,\r\n            failure: this.onFailure\r\n        }, props));\r\n\r\n        this.set('id', this.name);\r\n    }\r\n\r\n});","dmx.Component('calendar-event', {\r\n\r\n    constructor: function(node, parent, source) {\r\n        if (!(parent instanceof dmx.Component('calendar-source'))) {\r\n            console.error('calendar-event can only be child of calendar-source component.');\r\n        }\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'title': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'url': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'start': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'end': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'all-day': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'days-of-week': { // For defining a simple recurring event\r\n            type: Array,\r\n            default: null\r\n        },\r\n\r\n        'start-time': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'end-time': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'start-recur': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'end-recur': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'group-id': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'rendering': {\r\n            type: String, // background, inverse-background\r\n            default: null\r\n        },\r\n\r\n        'editable': {\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n\r\n        'color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'background-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'border-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'text-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'class-name': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'extended-props': {\r\n            type: Object,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    $parseAttributes: function(node) {\r\n        var self = this;\r\n\r\n        dmx.BaseComponent.prototype.$parseAttributes.call(this, node);\r\n\r\n        // constraint custom parse\r\n        this.parseAttribute(node, 'constraint').forEach(function(attr) {\r\n            if (attr.modifiers['business-hours']) {\r\n                // special case for businessHours modifier\r\n                self.props.constraint = 'businessHours';\r\n            } else {\r\n                if (attr.binding) {\r\n                    // dynamic attribute\r\n                    self.$addBinding(attr.value, function(value) {\r\n                        self.props.constraint = value;\r\n                    });\r\n                } else {\r\n                    // static attribute\r\n                    self.props.constraint = attr.value;\r\n                }\r\n            }\r\n\r\n            // we need to remove the attribute so that the default parser doesn't parse it\r\n            node.removeAttribute(attr.fullName);\r\n        });\r\n    },\r\n\r\n    update: function(props) {\r\n        if (!dmx.equal(props, this.props)) {\r\n            if (this.parent.refetch) {\r\n                this.parent.refetch();\r\n            }\r\n        }\r\n    },\r\n\r\n    // special parse required for constraint attribute\r\n    // supports static/dynamic attributes\r\n    parseAttribute: function(node, attrName) {\r\n        var attributes = [];\r\n        var re = new RegExp('^(dmx\\\\-bind:)?' + attrName.replace(/[-[\\]{}()*+?.,\\^$|#\\s]/g, '\\\\$&'), 'i');\r\n\r\n        if (node.nodeType == 1) {\r\n            for (var i = 0; i < node.attributes.length; i++) {\r\n                var attribute = node.attributes[i];\r\n\r\n                if (attribute && attribute.specified && re.test(attribute.name)) {\r\n                    var name = attribute.name;\r\n                    var argument = null;\r\n                    var modifiers = {};\r\n\r\n                    name = name.replace(/^dmx\\-bind:/i, '');\r\n\r\n                    name.split('.').forEach(function(part, i) {\r\n                        if (i === 0) {\r\n                            name = part;\r\n                        } else {\r\n                            var pos = part.indexOf(':');\r\n                            if (pos > 0) {\r\n                                modifiers[part.substr(0, pos)] = part.substr(pos + 1);\r\n                            } else {\r\n                                modifiers[part] = true;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    var pos = name.indexOf(':');\r\n                    if (pos > 0) {\r\n                        argument = name.substr(pos + 1);\r\n                        name = name.substr(0, pos);\r\n                    }\r\n\r\n                    attributes.push({\r\n                        name: name,\r\n                        binding: attribute.name.indexOf('dmx-bind:') === 0,\r\n                        fullName: attribute.name,\r\n                        value: attribute.value,\r\n                        argument: argument,\r\n                        modifiers: modifiers\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n});"]}